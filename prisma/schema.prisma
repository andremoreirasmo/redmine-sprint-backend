generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model redmine {
  id                  String                @id() @default(uuid())
  name                String
  url                 String
  apiKey              String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now())
  project_import      Int
  redmine_user        redmine_user[]
  redmine_user_import redmine_user_import[]
  team                team[]
}

model redmine_user {
  id         String   @id() @default(uuid())
  role       Int
  user_id    String
  redmine_id String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  redmine    redmine  @relation(fields: [redmine_id], references: [id], onDelete: Cascade)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model redmine_user_import {
  id              String   @id() @default(uuid())
  redmine_id      String
  id_user_redmine Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  name            String
  redmine         redmine  @relation(fields: [redmine_id], references: [id], onDelete: Cascade)
}

model team {
  id              String   @id() @default(uuid())
  hours_per_point Int
  redmine_id      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  redmine         redmine  @relation(fields: [redmine_id], references: [id], onDelete: Cascade)
}

model user {
  id           String         @id() @default(uuid())
  name         String
  email        String         @unique()
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  redmine_user redmine_user[]
  user_token   user_token[]
}

model user_token {
  id        String   @default(uuid())
  token     String   @default(uuid())
  user_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([id, token])
}
